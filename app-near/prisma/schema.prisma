// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["views"]
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

enum SurveyPhase {
    STEP_1_NEIGHBORHOOD_INFORMATION
    STEP_2_SU_SURVERY
    STEP_3_SU_EXPLORATION
    STEP_4_ADDITIONAL_SURVEY
    STEP_5_RESULTS
}

model Survey {
    id        Int      @id @default(autoincrement())
    name      String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    phase     SurveyPhase @default(STEP_1_NEIGHBORHOOD_INFORMATION)
    quartier  Quartier?

    @@map("surveys")
    suAnswer SuAnswer[]
}

enum AgeCategory {
  UNDER_15
  FROM_15_TO_29
  FROM_30_TO_44
  FROM_45_TO_59
  FROM_60_TO_74
  ABOVE_75
}

enum Gender {
  MAN
  WOMAN
}

enum ProfessionalCategory {
  CS1
  CS2
  CS3
  CS4
  CS5
  CS6
  CS7
  CS8_unemployed
  CS8_student
  CS8_other
}

enum EasyHealthAccess {
  EASY
  MODERATE
  HARD
}

enum MeatFrequency {
  MINOR
  REGULAR
  MAJOR
}

enum TransportationMode {
  CAR
  PUBLIC
  LIGHT
}

enum DigitalIntensity {
  LIGHT
  REGULAR
  INTENSE
}

enum PurchasingStrategy {
  NEW
  MIXED
  SECOND_HAND
}

enum AirTravelFrequency {
  ZERO
  FROM_1_TO_3
  ABOVE_3
}

enum HeatSource {
  ELECTRICITY
  GAZ
  OIL
	@@map("EatSource")
}
model SuAnswer {
  id                      Int     @id @default(autoincrement())
  isNeighborhoodResident  Boolean
  ageCategory             AgeCategory
  gender                  Gender
  professionalCategory    ProfessionalCategory
  easyHealthAccess        EasyHealthAccess
  meatFrequency           MeatFrequency
  transportationMode      TransportationMode
  digitalIntensity        DigitalIntensity
  purchasingStrategy      PurchasingStrategy
  airTravelFrequency      AirTravelFrequency
  heatSource              HeatSource
  email                   String
  surveyId                Int
  survey                  Survey  @relation(fields: [surveyId], references: [id])
}

model InseeIris2021 {
  iris               String     @db.VarChar(255)
  com                String     @db.VarChar(255)
  typ_iris           String     @db.VarChar(255)
  lab_iris           String     @db.VarChar(255)
  p21_pop            Float?
  p21_pop0002        Float?
  p21_pop0305        Float?
  p21_pop0610        Float?
  p21_pop1117        Float?
  p21_pop1824        Float?
  p21_pop2539        Float?
  p21_pop4054        Float?
  p21_pop5564        Float?
  p21_pop6579        Float?
  p21_pop80p         Float?
  p21_pop0014        Float?
  p21_pop1529        Float?
  p21_pop3044        Float?
  p21_pop4559        Float?
  p21_pop6074        Float?
  p21_pop75p         Float?
  p21_pop0019        Float?
  p21_pop2064        Float?
  p21_pop65p         Float?
  p21_poph           Float?
  p21_h0014          Float?
  p21_h1529          Float?
  p21_h3044          Float?
  p21_h4559          Float?
  p21_h6074          Float?
  p21_h75p           Float?
  p21_h0019          Float?
  p21_h2064          Float?
  p21_h65p           Float?
  p21_popf           Float?
  p21_f0014          Float?
  p21_f1529          Float?
  p21_f3044          Float?
  p21_f4559          Float?
  p21_f6074          Float?
  p21_f75p           Float?
  p21_f0019          Float?
  p21_f2064          Float?
  p21_f65p           Float?
  c21_pop15p         Float?
  c21_pop15p_cs1     Float?
  c21_pop15p_cs2     Float?
  c21_pop15p_cs3     Float?
  c21_pop15p_cs4     Float?
  c21_pop15p_cs5     Float?
  c21_pop15p_cs6     Float?
  c21_pop15p_cs7     Float?
  c21_pop15p_cs8     Float?
  c21_h15p           Float?
  c21_h15p_cs1       Float?
  c21_h15p_cs2       Float?
  c21_h15p_cs3       Float?
  c21_h15p_cs4       Float?
  c21_h15p_cs5       Float?
  c21_h15p_cs6       Float?
  c21_h15p_cs7       Float?
  c21_h15p_cs8       Float?
  c21_f15p           Float?
  c21_f15p_cs1       Float?
  c21_f15p_cs2       Float?
  c21_f15p_cs3       Float?
  c21_f15p_cs4       Float?
  c21_f15p_cs5       Float?
  c21_f15p_cs6       Float?
  c21_f15p_cs7       Float?
  c21_f15p_cs8       Float?
  p21_pop_fr         Float?
  p21_pop_etr        Float?
  p21_pop_imm        Float?
  p21_pmen           Float?
  p21_phormen        Float?
  @@map("insee_iris_2021")
  @@ignore
}

view Quartier {
  iris_selectors         String[]
  population_total       Int
  p21_pop1529_sum        Int
  p21_pop3044_sum        Int
  p21_pop4559_sum        Int
  p21_pop6074_sum        Int
  p21_pop75p_sum         Int
  c21_pop15p_cs1_sum     Int
  c21_pop15p_cs2_sum     Int
  c21_pop15p_cs3_sum     Int
  c21_pop15p_cs4_sum     Int
  c21_pop15p_cs5_sum     Int
  c21_pop15p_cs6_sum     Int
  c21_pop15p_cs7_sum     Int
  c21_pop15p_cs8_sum     Int
  population_femme_total Int
  population_homme_total Int
  surveyId         Int  @unique @map("survey_id")           // Foreign key unique field to survey
  survey           Survey @relation(fields: [surveyId], references: [id])
  @@map("quartiers")
}