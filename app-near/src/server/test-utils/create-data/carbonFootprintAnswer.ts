import { BroadcastChannel, type CarbonFootprintAnswer } from "@prisma/client";
import { faker } from "@faker-js/faker";
import { type BuilderCarbonFootprintAnswer } from "~/types/CarbonFootprint";

export const buildCarbonFootprintAnswer = (
  surveyId: number,
  suId: number,
  data?: Partial<CarbonFootprintAnswer>,
): BuilderCarbonFootprintAnswer => ({
  broadcastChannel: faker.helpers.arrayElement(Object.values(BroadcastChannel)),
  email: Date.now() + faker.internet.email(),
  globalNote: faker.number.float(),
  transportation: faker.number.float(),
  transportationCar: faker.number.float(),
  transportationCarKm2: faker.number.float(),
  transportationCarOilConsumption100: faker.number.float(),
  transportationCarOilType: faker.number.float(),
  transportationCarElectricConsumption100: faker.number.float(),
  transportationPlane: faker.number.float(),
  transportationBicycle: faker.number.float(),
  transportationSoftMobility: faker.number.float(),
  transportationTrain: faker.number.float(),
  transportationPublicTransport: faker.number.float(),
  transportationCarLongDistance: faker.number.float(),
  transportationHollidays: faker.number.float(),
  transportationHollidaysCaravan: faker.number.float(),
  transportationHollidaysCampingCar: faker.number.float(),
  transportationHollidaysVan: faker.number.float(),
  transportationHollidaysRentalVehicle: faker.number.float(),
  transportationHollidaysCruise: faker.number.float(),
  transportationFerry: faker.number.float(),
  alimentation: faker.number.float(),
  alimentationMeals: faker.number.float(),
  alimentationLunchDinner: faker.number.float(),
  alimentationBonus: faker.number.float(),
  alimentationLocalImpact: faker.number.float(),
  alimentationLocalConsumption: faker.number.float(),
  alimentationSeasonalImpact: faker.number.float(),
  alimentationAnnualBreakfast: faker.number.float(),
  alimentationDeforestation: faker.number.float(),
  alimentationDrinks: faker.number.float(),
  alimentationHotDrinks: faker.number.float(),
  alimentationColdDrinks: faker.number.float(),
  alimentationWaste: faker.number.float(),
  alimentationWasteHabits: faker.number.float(),
  logement: faker.number.float(),
  logementConstruction: faker.number.float(),
  logementConstructionBase: faker.number.float(),
  logementConstructionCooling: faker.number.float(),
  logementConstructionRenovation: faker.number.float(),
  logementConstructionDeforestation: faker.number.float(),
  logementConstructionSoilArtificialization: faker.number.float(),
  logementElectricity: faker.number.float(),
  logementElectricityTotalConsumption: faker.number.float(),
  logementElectricitySolarAutoconsumption: faker.number.float(),
  logementElectricityCarbonIntensity: faker.number.float(),
  logementHeating: faker.number.float(),
  logementAirConditioning: faker.number.float(),
  logementSwimmingPool: faker.number.float(),
  logementOutdor: faker.number.float(),
  logementHollidays: faker.number.float(),
  logementHollidaysHotelImpact: faker.number.float(),
  logementHollidaysCampingImpact: faker.number.float(),
  logementHollidaysYouthHostelImpact: faker.number.float(),
  logementHollidaysRentalImpact: faker.number.float(),
  logementHollidaysHomeExchangeImpact: faker.number.float(),
  logementHollidaysSecondaryHomeImpact: faker.number.float(),
  divers: faker.number.float(),
  diversHouseholdAppliances: faker.number.float(),
  diversHouseholdAppliancesDevices: faker.number.float(),
  diversFurniture: faker.number.float(),
  diversFurnitureItems: faker.number.float(),
  diversFurnitureDeforestation: faker.number.float(),
  diversFurniturePreservation: faker.number.float(),
  diversDigital: faker.number.float(),
  diversDigitalInternet: faker.number.float(),
  diversDigitalDevices: faker.number.float(),
  diversTextile: faker.number.float(),
  servicesSocietal: faker.number.float(),
  servicesPublics: faker.number.float(),
  servicesMarket: faker.number.float(),
  answers: { anything: "ok" },

  airTravelFrequency: null,
  digitalIntensity: null,
  heatSource: null,
  meatFrequency: null,
  purchasingStrategy: null,
  transportationMode: null,

  distanceToBarycenter: null,
  knowSu: true,

  ...data,
  surveyId,
  suId,
});
